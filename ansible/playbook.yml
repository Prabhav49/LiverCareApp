---
- name: Deploy LiverCareApp to Kubernetes using Ansible
  hosts: localhost
  connection: local
  gather_facts: no

  vars:
    kubeconfig_path: "{{ kubeconfig_path | default('./.kube/config') }}"
    manifests_dir: "{{ playbook_dir }}/../k8s-manifests"
    target_namespace: "mlops-project"

  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"

  tasks:
    - name: Verify kubeconfig file exists
      stat:
        path: "{{ kubeconfig_path }}"
      register: kubeconfig_file

    - name: Fail if kubeconfig is missing
      fail:
        msg: "Kubeconfig not found at {{ kubeconfig_path }}"
      when: not kubeconfig_file.stat.exists

    - name: Verify manifests directory exists
      stat:
        path: "{{ manifests_dir }}"
      register: manifests_dir_stat

    - name: Fail if manifests directory is missing
      fail:
        msg: "Kubernetes manifests directory not found at {{ manifests_dir }}"
      when: not manifests_dir_stat.stat.exists

    - name: Validate Kubernetes connection
      command: "kubectl cluster-info"
      register: cluster_info
      changed_when: false
      ignore_errors: yes

    - name: Check if namespace exists
      command: "kubectl get namespace {{ target_namespace }} --ignore-not-found"
      register: namespace_check
      changed_when: false

    - name: Create namespace if missing
      command: "kubectl create namespace {{ target_namespace }}"
      when: "'namespace/' + target_namespace not in namespace_check.stdout"
      register: create_namespace
      changed_when: create_namespace.rc == 0

    - name: Apply Kubernetes Manifests
      block:
        - name: Apply namespace-specific manifests first
          command: "kubectl apply -f {{ manifests_dir }} -n {{ target_namespace }}"
          register: apply_result

        - name: Verify resource creation
          command: "kubectl get all -n {{ target_namespace }}"
          register: resource_check
          when: apply_result.rc == 0
      rescue:
        - name: Handle deployment failure
          fail:
            msg: |
              Deployment failed!
              Error: {{ apply_result.stderr }}
              Applied resources: {{ apply_result.stdout }}

    - name: Show deployment summary
      debug:
        msg: |
          Deployment successful!
          Created resources:
          {{ apply_result.stdout }}
          Current namespace status:
          {{ resource_check.stdout }}
      when: apply_result.rc == 0 and resource_check is defined